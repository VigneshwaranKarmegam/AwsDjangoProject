version: '3'
services:
  # postgres:
  #   image: postgres:latest
  #   restart: always
  #   environment:
  #     POSTGRES_DB: DjangoAwsDB
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: 
  #   ports:
  #     - "5432:5432"
  #   # volumes:
  #   #   - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - dem

  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: pgadmin
  #     PGADMIN_LISTEN_PORT: 80
  #   ports:
  #     - "5000:80"
  #   depends_on:
  #     - postgres
  #   networks:
  #     - dem

   db:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=
      - PGDATA=/data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: /bin/bash -c "until pg_isready -U ${POSTGRES_USER} -p 5432; do sleep 1; done; psql -U ${POSTGRES_USER} -c 'CREATE DATABASE DjangoAwsDB;'"

  app:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  
    # volumes:
    #   - .:/app
    depends_on:
      - db
    networks:
      - app


networks:
  db:
    driver: bridge

volumes:
  db: